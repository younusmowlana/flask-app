{"ast":null,"code":"import { addUserStart, addUserFailure, addUserSuccess, updateUserStart, updateUserSuccess, updateUserFailure, getUserStart, getUserFailure, getUserSuccess, deleteUserStart, deleteUserSuccess, deleteUserFailure } from \"./userSlice\";\nimport { publicRequest } from \"../../requestMethods\"; //users\n//Add student\n\nexport const addUser = async (user, dispatch) => {\n  dispatch(addUserStart());\n\n  try {\n    console.log(\"user...............\");\n    console.log(user);\n    const res = await publicRequest.post(`/student`, user);\n    console.log(\"response\");\n    console.log(res);\n    dispatch(addUserSuccess(res.data));\n  } catch (err) {\n    dispatch(addUserFailure());\n  }\n}; //update users\n\nexport const updateUser = async (id, user, dispatch) => {\n  console.log(\"user\");\n  console.log(user);\n  dispatch(updateUserStart());\n\n  try {\n    // update\n    const res = await publicRequest.put(`/student/${id}`, user);\n    dispatch(updateUserSuccess({\n      id,\n      user\n    }));\n  } catch (err) {\n    dispatch(updateUserFailure());\n  }\n}; //get users\n\nexport const getUser = async dispatch => {\n  dispatch(getUserStart());\n\n  try {\n    const res = await publicRequest.get(\"/students\"); // console.log(res.data.data);\n\n    dispatch(getUserSuccess(res.data.data));\n  } catch (err) {\n    dispatch(getUserFailure());\n  }\n}; //Delete Users\n\nexport const deleteUser = async (id, dispatch) => {\n  dispatch(deleteUserStart());\n\n  try {\n    const res = await publicRequest.delete(`student/${id}`);\n    console.log(res);\n    dispatch(deleteUserSuccess(id));\n  } catch (err) {\n    dispatch(deleteUserFailure());\n  }\n};","map":{"version":3,"names":["addUserStart","addUserFailure","addUserSuccess","updateUserStart","updateUserSuccess","updateUserFailure","getUserStart","getUserFailure","getUserSuccess","deleteUserStart","deleteUserSuccess","deleteUserFailure","publicRequest","addUser","user","dispatch","console","log","res","post","data","err","updateUser","id","put","getUser","get","deleteUser","delete"],"sources":["D:/python/Student-Registration/client/src/features/users/APIcalls.js"],"sourcesContent":["import {\r\n    addUserStart,\r\n    addUserFailure,\r\n    addUserSuccess,\r\n    updateUserStart,\r\n    updateUserSuccess,\r\n    updateUserFailure,\r\n    getUserStart,getUserFailure,getUserSuccess,\r\n    deleteUserStart,\r\n    deleteUserSuccess,\r\n    deleteUserFailure\r\n} from \"./userSlice\"\r\nimport { publicRequest } from \"../../requestMethods\"\r\n\r\n\r\n//users\r\n\r\n//Add student\r\nexport const addUser = async (user, dispatch) => {\r\n    dispatch(addUserStart());\r\n    try {\r\n    console.log(\"user...............\")\r\n    console.log(user) \r\n     const res = await publicRequest.post(`/student`, user);\r\n     console.log(\"response\")\r\n     console.log(res);\r\n      dispatch(addUserSuccess(res.data));\r\n    } catch (err) {\r\n      dispatch(addUserFailure());\r\n    }\r\n  };\r\n//update users\r\nexport const updateUser = async (id, user, dispatch) => {\r\n  console.log(\"user\")\r\n  console.log(user)\r\n  dispatch(updateUserStart());\r\n  try {\r\n    // update\r\n    const res = await publicRequest.put(`/student/${id}`,user);\r\n    dispatch(updateUserSuccess({ id, user }));\r\n  } catch (err) {\r\n    dispatch(updateUserFailure());\r\n  }\r\n};\r\n//get users\r\nexport const getUser = async (dispatch) => {\r\n  dispatch(getUserStart());\r\n  try {\r\n    const res = await publicRequest.get(\"/students\");\r\n    // console.log(res.data.data);\r\n    dispatch(getUserSuccess(res.data.data));\r\n  } catch (err) {\r\n    dispatch(getUserFailure());\r\n  }\r\n};\r\n\r\n//Delete Users\r\nexport const deleteUser = async (id, dispatch) => {\r\n  dispatch(deleteUserStart());\r\n  try {\r\n     const res = await publicRequest.delete(`student/${id}`);\r\n     console.log(res)\r\n    dispatch(deleteUserSuccess(id));\r\n  } catch (err) {\r\n    dispatch(deleteUserFailure());\r\n  }\r\n};"],"mappings":"AAAA,SACIA,YADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,iBALJ,EAMIC,iBANJ,EAOIC,YAPJ,EAOiBC,cAPjB,EAOgCC,cAPhC,EAQIC,eARJ,EASIC,iBATJ,EAUIC,iBAVJ,QAWO,aAXP;AAYA,SAASC,aAAT,QAA8B,sBAA9B,C,CAGA;AAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,OAAOC,IAAP,EAAaC,QAAb,KAA0B;EAC7CA,QAAQ,CAACf,YAAY,EAAb,CAAR;;EACA,IAAI;IACJgB,OAAO,CAACC,GAAR,CAAY,qBAAZ;IACAD,OAAO,CAACC,GAAR,CAAYH,IAAZ;IACC,MAAMI,GAAG,GAAG,MAAMN,aAAa,CAACO,IAAd,CAAoB,UAApB,EAA+BL,IAA/B,CAAlB;IACAE,OAAO,CAACC,GAAR,CAAY,UAAZ;IACAD,OAAO,CAACC,GAAR,CAAYC,GAAZ;IACCH,QAAQ,CAACb,cAAc,CAACgB,GAAG,CAACE,IAAL,CAAf,CAAR;EACD,CAPD,CAOE,OAAOC,GAAP,EAAY;IACZN,QAAQ,CAACd,cAAc,EAAf,CAAR;EACD;AACF,CAZI,C,CAaP;;AACA,OAAO,MAAMqB,UAAU,GAAG,OAAOC,EAAP,EAAWT,IAAX,EAAiBC,QAAjB,KAA8B;EACtDC,OAAO,CAACC,GAAR,CAAY,MAAZ;EACAD,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACAC,QAAQ,CAACZ,eAAe,EAAhB,CAAR;;EACA,IAAI;IACF;IACA,MAAMe,GAAG,GAAG,MAAMN,aAAa,CAACY,GAAd,CAAmB,YAAWD,EAAG,EAAjC,EAAmCT,IAAnC,CAAlB;IACAC,QAAQ,CAACX,iBAAiB,CAAC;MAAEmB,EAAF;MAAMT;IAAN,CAAD,CAAlB,CAAR;EACD,CAJD,CAIE,OAAOO,GAAP,EAAY;IACZN,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;EACD;AACF,CAXM,C,CAYP;;AACA,OAAO,MAAMoB,OAAO,GAAG,MAAOV,QAAP,IAAoB;EACzCA,QAAQ,CAACT,YAAY,EAAb,CAAR;;EACA,IAAI;IACF,MAAMY,GAAG,GAAG,MAAMN,aAAa,CAACc,GAAd,CAAkB,WAAlB,CAAlB,CADE,CAEF;;IACAX,QAAQ,CAACP,cAAc,CAACU,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAf,CAAR;EACD,CAJD,CAIE,OAAOC,GAAP,EAAY;IACZN,QAAQ,CAACR,cAAc,EAAf,CAAR;EACD;AACF,CATM,C,CAWP;;AACA,OAAO,MAAMoB,UAAU,GAAG,OAAOJ,EAAP,EAAWR,QAAX,KAAwB;EAChDA,QAAQ,CAACN,eAAe,EAAhB,CAAR;;EACA,IAAI;IACD,MAAMS,GAAG,GAAG,MAAMN,aAAa,CAACgB,MAAd,CAAsB,WAAUL,EAAG,EAAnC,CAAlB;IACAP,OAAO,CAACC,GAAR,CAAYC,GAAZ;IACDH,QAAQ,CAACL,iBAAiB,CAACa,EAAD,CAAlB,CAAR;EACD,CAJD,CAIE,OAAOF,GAAP,EAAY;IACZN,QAAQ,CAACJ,iBAAiB,EAAlB,CAAR;EACD;AACF,CATM"},"metadata":{},"sourceType":"module"}