{"ast":null,"code":"const Generator = (id, seed) => {\n  const getNow = () => Math.floor((Date.now() - seed) / 1000);\n\n  let counter = 0;\n  let nextTime = 0;\n\n  const next = () => {\n    counter = 0;\n    nextTime = getNow() + 1;\n  };\n\n  const uuid = () => {\n    const now = getNow();\n\n    if (now < nextTime) {\n      if (counter > 4095) {\n        throw Error('uuid out of range');\n      }\n    } else {\n      next();\n    }\n\n    const time = (nextTime & 0x1ffffffff) * 2097152;\n    const uid = (id & 0x1ff) * 4096;\n    const count = counter & 0xfff;\n    const uuid = time + uid + count;\n    counter++;\n    return uuid;\n  };\n\n  return {\n    id,\n    seed,\n    uuid\n  };\n};\n\nmodule.exports = function (id) {\n  let seed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  if (typeof id !== 'number') {\n    throw Error('id need be number');\n  }\n\n  if (typeof seed !== 'number') {\n    throw Error('seed need be number');\n  }\n\n  id = parseInt(id);\n  seed = parseInt(seed);\n\n  if (id < 0 || id > 511) {\n    throw Error('d must be >=0 or <= 511');\n  }\n\n  if (seed < 0 || seed > Date.now()) {\n    throw Error('seed must <= now');\n  }\n\n  const gen = Generator(id, seed);\n  gen.id = id;\n  gen.seed = seed;\n  return gen;\n};","map":{"version":3,"names":["Generator","id","seed","getNow","Math","floor","Date","now","counter","nextTime","next","uuid","Error","time","uid","count","module","exports","parseInt","gen"],"sources":["D:/python/Student-Registration/client/node_modules/uuid-int/index.js"],"sourcesContent":["const Generator = (id, seed) => {\n  const getNow = () => Math.floor((Date.now() - seed) / 1000);\n  let counter = 0;\n  let nextTime = 0;\n  const next = () => {\n    counter = 0;\n    nextTime = getNow() + 1;\n  };\n  const uuid = () => {\n    const now = getNow();\n    if (now < nextTime) {\n      if (counter > 4095) {\n        throw Error('uuid out of range');\n      }\n    } else {\n      next();\n    }\n\n    const time = (nextTime & 0x1ffffffff) * 2097152;\n    const uid = (id & 0x1ff) * 4096;\n    const count = counter & 0xfff;\n    const uuid = time + uid + count;\n\n    counter++;\n\n    return uuid;\n  };\n  return { id, seed, uuid };\n};\n\nmodule.exports = (id, seed = 0) => {\n  if (typeof id !== 'number') {\n    throw Error('id need be number');\n  }\n  if (typeof seed !== 'number') {\n    throw Error('seed need be number');\n  }\n  id = parseInt(id);\n  seed = parseInt(seed);\n  if (id < 0 || id > 511) {\n    throw Error('d must be >=0 or <= 511');\n  }\n  if (seed < 0 || seed > Date.now()) {\n    throw Error('seed must <= now');\n  }\n  const gen = Generator(id, seed);\n  gen.id = id;\n  gen.seed = seed;\n  return gen;\n};\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;EAC9B,MAAMC,MAAM,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAW,CAACC,IAAI,CAACC,GAAL,KAAaL,IAAd,IAAsB,IAAjC,CAArB;;EACA,IAAIM,OAAO,GAAG,CAAd;EACA,IAAIC,QAAQ,GAAG,CAAf;;EACA,MAAMC,IAAI,GAAG,MAAM;IACjBF,OAAO,GAAG,CAAV;IACAC,QAAQ,GAAGN,MAAM,KAAK,CAAtB;EACD,CAHD;;EAIA,MAAMQ,IAAI,GAAG,MAAM;IACjB,MAAMJ,GAAG,GAAGJ,MAAM,EAAlB;;IACA,IAAII,GAAG,GAAGE,QAAV,EAAoB;MAClB,IAAID,OAAO,GAAG,IAAd,EAAoB;QAClB,MAAMI,KAAK,CAAC,mBAAD,CAAX;MACD;IACF,CAJD,MAIO;MACLF,IAAI;IACL;;IAED,MAAMG,IAAI,GAAG,CAACJ,QAAQ,GAAG,WAAZ,IAA2B,OAAxC;IACA,MAAMK,GAAG,GAAG,CAACb,EAAE,GAAG,KAAN,IAAe,IAA3B;IACA,MAAMc,KAAK,GAAGP,OAAO,GAAG,KAAxB;IACA,MAAMG,IAAI,GAAGE,IAAI,GAAGC,GAAP,GAAaC,KAA1B;IAEAP,OAAO;IAEP,OAAOG,IAAP;EACD,CAlBD;;EAmBA,OAAO;IAAEV,EAAF;IAAMC,IAAN;IAAYS;EAAZ,CAAP;AACD,CA5BD;;AA8BAK,MAAM,CAACC,OAAP,GAAiB,UAAChB,EAAD,EAAkB;EAAA,IAAbC,IAAa,uEAAN,CAAM;;EACjC,IAAI,OAAOD,EAAP,KAAc,QAAlB,EAA4B;IAC1B,MAAMW,KAAK,CAAC,mBAAD,CAAX;EACD;;EACD,IAAI,OAAOV,IAAP,KAAgB,QAApB,EAA8B;IAC5B,MAAMU,KAAK,CAAC,qBAAD,CAAX;EACD;;EACDX,EAAE,GAAGiB,QAAQ,CAACjB,EAAD,CAAb;EACAC,IAAI,GAAGgB,QAAQ,CAAChB,IAAD,CAAf;;EACA,IAAID,EAAE,GAAG,CAAL,IAAUA,EAAE,GAAG,GAAnB,EAAwB;IACtB,MAAMW,KAAK,CAAC,yBAAD,CAAX;EACD;;EACD,IAAIV,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAGI,IAAI,CAACC,GAAL,EAAvB,EAAmC;IACjC,MAAMK,KAAK,CAAC,kBAAD,CAAX;EACD;;EACD,MAAMO,GAAG,GAAGnB,SAAS,CAACC,EAAD,EAAKC,IAAL,CAArB;EACAiB,GAAG,CAAClB,EAAJ,GAASA,EAAT;EACAkB,GAAG,CAACjB,IAAJ,GAAWA,IAAX;EACA,OAAOiB,GAAP;AACD,CAnBD"},"metadata":{},"sourceType":"script"}