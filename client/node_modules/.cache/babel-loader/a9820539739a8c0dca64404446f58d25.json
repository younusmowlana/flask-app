{"ast":null,"code":"var _jsxFileName = \"D:\\\\python\\\\Student-Registration\\\\client\\\\src\\\\features\\\\users\\\\UpdateCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router\";\nimport WidgetButton from \"../../components/WidgetButton\";\nimport WidgetTextfield from \"../../components/WidgetTextfield\";\nimport { updateCourse } from \"./courseSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateCourse = () => {\n  _s();\n\n  const params = useParams();\n  const dispatch = useDispatch();\n  const Courses = useSelector(store => store.courses.courses);\n  const existingUser = Courses.filter(Courses => Courses.cid === Number(params.id)); // console.log(existingUser)\n\n  console.log(Courses);\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    coursename: \"\",\n    description: \"\",\n    duration: \"\"\n  });\n  console.log(values); // const handleUpdateCourse = () => {\n  //   setValues({cname: \"\", desc:\"\"});\n  //   console.log(\"====================================\");\n  //   console.log(values);\n  //   console.log(\"====================================\");\n  //   dispatch(\n  //       updateCourse({ id: params.id, cname: values.cname,desc: values.desc})\n  //   );\n  //   navigate(\"/\");\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-10 max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(WidgetTextfield, {\n      label: \"Course Name :\",\n      value: values.coursename,\n      onChange: e => setValues({ ...values,\n        coursename: e.target.value\n      }),\n      inputProps: {\n        type: \"text\",\n        placeholder: \"Enter Course name here\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WidgetTextfield, {\n      label: \"Description :\",\n      value: values.description,\n      onChange: e => setValues({ ...values,\n        description: e.target.value\n      }),\n      inputProps: {\n        type: \"text\",\n        placeholder: \"Enter Course Descripton\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WidgetTextfield, {\n      label: \"Duration :\",\n      value: values.duration,\n      onChange: e => setValues({ ...values,\n        duration: e.target.value\n      }),\n      inputProps: {\n        type: \"text\",\n        placeholder: \"Enter Course Duration\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WidgetButton, {\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateCourse, \"ZkwGm/C+Zdl0HQi+8UY8R20ElHI=\", false, function () {\n  return [useParams, useDispatch, useSelector, useNavigate];\n});\n\n_c = UpdateCourse;\nexport default UpdateCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCourse\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","useParams","WidgetButton","WidgetTextfield","updateCourse","UpdateCourse","params","dispatch","Courses","store","courses","existingUser","filter","cid","Number","id","console","log","navigate","values","setValues","coursename","description","duration","e","target","value","type","placeholder"],"sources":["D:/python/Student-Registration/client/src/features/users/UpdateCourse.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport WidgetButton from \"../../components/WidgetButton\";\r\nimport WidgetTextfield from \"../../components/WidgetTextfield\";\r\nimport { updateCourse } from \"./courseSlice\";\r\n\r\nconst UpdateCourse = () => {\r\n   const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const Courses = useSelector((store) => store.courses.courses);\r\n  const existingUser = Courses.filter((Courses) => Courses.cid === Number(params.id));\r\n  // console.log(existingUser)\r\n  console.log(Courses)\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const [values, setValues] = useState({\r\n    coursename:\"\",\r\n    description:\"\",\r\n    duration:\"\",\r\n  });\r\n\r\n  console.log(values);\r\n  // const handleUpdateCourse = () => {\r\n  //   setValues({cname: \"\", desc:\"\"});\r\n\r\n  //   console.log(\"====================================\");\r\n  //   console.log(values);\r\n  //   console.log(\"====================================\");\r\n\r\n  //   dispatch(\r\n  //       updateCourse({ id: params.id, cname: values.cname,desc: values.desc})\r\n  //   );\r\n\r\n  //   navigate(\"/\");\r\n  // };\r\n  return (\r\n    <div className=\"mt-10 max-w-xl mx-auto\">\r\n        <WidgetTextfield\r\n        label=\"Course Name :\"\r\n        value={values.coursename}\r\n        onChange={(e) => setValues({ ...values, coursename: e.target.value })}\r\n        inputProps={{ type: \"text\", placeholder: \"Enter Course name here\" }}\r\n      />\r\n      <WidgetTextfield\r\n       label=\"Description :\"\r\n       value={values.description}\r\n       onChange={(e) => setValues({ ...values, description: e.target.value })}\r\n       inputProps={{ type: \"text\", placeholder: \"Enter Course Descripton\" }}\r\n     />     \r\n      <WidgetTextfield\r\n       label=\"Duration :\"\r\n       value={values.duration}\r\n       onChange={(e) => setValues({ ...values, duration: e.target.value })}\r\n       inputProps={{ type: \"text\", placeholder: \"Enter Course Duration\" }}\r\n     />  \r\n        <WidgetButton  >Update</WidgetButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateCourse\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,cAAvC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAASC,YAAT,QAA6B,eAA7B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACxB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;EACD,MAAMM,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAMU,OAAO,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcA,OAA1B,CAA3B;EACA,MAAMC,YAAY,GAAGH,OAAO,CAACI,MAAR,CAAgBJ,OAAD,IAAaA,OAAO,CAACK,GAAR,KAAgBC,MAAM,CAACR,MAAM,CAACS,EAAR,CAAlD,CAArB,CAJyB,CAKzB;;EACAC,OAAO,CAACC,GAAR,CAAYT,OAAZ;EAEA,MAAMU,QAAQ,GAAGlB,WAAW,EAA5B;EAEA,MAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC;IACnCwB,UAAU,EAAC,EADwB;IAEnCC,WAAW,EAAC,EAFuB;IAGnCC,QAAQ,EAAC;EAH0B,CAAD,CAApC;EAMAP,OAAO,CAACC,GAAR,CAAYE,MAAZ,EAhByB,CAiBzB;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;;EACA,oBACE;IAAK,SAAS,EAAC,wBAAf;IAAA,wBACI,QAAC,eAAD;MACA,KAAK,EAAC,eADN;MAEA,KAAK,EAAEA,MAAM,CAACE,UAFd;MAGA,QAAQ,EAAGG,CAAD,IAAOJ,SAAS,CAAC,EAAE,GAAGD,MAAL;QAAaE,UAAU,EAAEG,CAAC,CAACC,MAAF,CAASC;MAAlC,CAAD,CAH1B;MAIA,UAAU,EAAE;QAAEC,IAAI,EAAE,MAAR;QAAgBC,WAAW,EAAE;MAA7B;IAJZ;MAAA;MAAA;MAAA;IAAA,QADJ,eAOE,QAAC,eAAD;MACC,KAAK,EAAC,eADP;MAEC,KAAK,EAAET,MAAM,CAACG,WAFf;MAGC,QAAQ,EAAGE,CAAD,IAAOJ,SAAS,CAAC,EAAE,GAAGD,MAAL;QAAaG,WAAW,EAAEE,CAAC,CAACC,MAAF,CAASC;MAAnC,CAAD,CAH3B;MAIC,UAAU,EAAE;QAAEC,IAAI,EAAE,MAAR;QAAgBC,WAAW,EAAE;MAA7B;IAJb;MAAA;MAAA;MAAA;IAAA,QAPF,eAaE,QAAC,eAAD;MACC,KAAK,EAAC,YADP;MAEC,KAAK,EAAET,MAAM,CAACI,QAFf;MAGC,QAAQ,EAAGC,CAAD,IAAOJ,SAAS,CAAC,EAAE,GAAGD,MAAL;QAAaI,QAAQ,EAAEC,CAAC,CAACC,MAAF,CAASC;MAAhC,CAAD,CAH3B;MAIC,UAAU,EAAE;QAAEC,IAAI,EAAE,MAAR;QAAgBC,WAAW,EAAE;MAA7B;IAJb;MAAA;MAAA;MAAA;IAAA,QAbF,eAmBI,QAAC,YAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CArDD;;GAAMvB,Y;UACYJ,S,EACCH,W,EACDC,W,EAKCC,W;;;KARbK,Y;AAuDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}