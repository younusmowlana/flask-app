{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  id: \"1\",\n  fname: \"Younus\",\n  lname: \"Mowlana\",\n  email: \"Younus@gmail.com\",\n  contact_no: \"0771234567\",\n  age: \"20\"\n}, {\n  id: \"2\",\n  fname: \"Zaid\",\n  lname: \"Ahamed\",\n  email: \"Zaid@gmail.com\",\n  contact_no: \"0411234567\",\n  age: \"26\"\n}, {\n  id: \"3\",\n  fname: \"Alex\",\n  lname: \"Fernando\",\n  email: \"alex@gmail.com\",\n  contact_no: \"0741234567\",\n  age: \"16\"\n}, {\n  id: \"4\",\n  fname: \"Traveena\",\n  lname: \"chandrasegar\",\n  email: \"Traveena@gmail.com\",\n  contact_no: \"0751234567\",\n  age: \"25\"\n}];\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      console.log(\"====================================\");\n      console.log(action);\n      console.log(\"====================================\");\n      state.push(action.payload);\n    },\n    updateUser: (state, action) => {\n      const {\n        id,\n        fname,\n        lname,\n        email,\n        contact_no,\n        age\n      } = action.payload;\n      const existingUser = state.find(user => user.id === id);\n\n      if (existingUser) {\n        existingUser.fname = fname;\n        existingUser.lname = lname;\n        existingUser.email = email;\n        existingUser.contact_no = contact_no;\n        existingUser.age = age;\n      }\n    },\n    deleteUser: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const existingUser = state.find(user => user.id === id);\n\n      if (existingUser) {\n        return state.filter(user => user.id !== id);\n      }\n    }\n  }\n});\nexport const {\n  addUser,\n  updateUser,\n  deleteUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","id","fname","lname","email","contact_no","age","userSlice","name","reducers","addUser","state","action","console","log","push","payload","updateUser","existingUser","find","user","deleteUser","filter","actions","reducer"],"sources":["D:/python/Student-Registration/client/src/features/users/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [\r\n  { id: \"1\", fname: \"Younus\",lname:\"Mowlana\", email: \"Younus@gmail.com\",contact_no:\"0771234567\", age:\"20\" },\r\n  { id: \"2\", fname: \"Zaid\",lname:\"Ahamed\", email: \"Zaid@gmail.com\",contact_no:\"0411234567\", age:\"26\"  },\r\n  { id: \"3\", fname: \"Alex\",lname:\"Fernando\", email: \"alex@gmail.com\",contact_no:\"0741234567\", age:\"16\"  },\r\n  { id: \"4\", fname: \"Traveena\",lname:\"chandrasegar\", email: \"Traveena@gmail.com\",contact_no:\"0751234567\", age:\"25\"  },\r\n];\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    addUser: (state, action) => {\r\n      console.log(\"====================================\");\r\n      console.log(action);\r\n      console.log(\"====================================\");\r\n      state.push(action.payload);\r\n    },\r\n    updateUser: (state, action) => {\r\n      const { id, fname, lname, email, contact_no ,age } = action.payload;\r\n      const existingUser = state.find((user) => user.id === id);\r\n      if (existingUser) {\r\n        existingUser.fname = fname;\r\n        existingUser.lname = lname;\r\n        existingUser.email = email;\r\n        existingUser.contact_no = contact_no;\r\n        existingUser.age = age;\r\n      }\r\n    },\r\n    deleteUser: (state, action) => {\r\n      const { id } = action.payload;\r\n      const existingUser = state.find((user) => user.id === id);\r\n      if (existingUser) {\r\n        return state.filter((user) => user.id !== id);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addUser, updateUser, deleteUser } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,GAAN;EAAWC,KAAK,EAAE,QAAlB;EAA2BC,KAAK,EAAC,SAAjC;EAA4CC,KAAK,EAAE,kBAAnD;EAAsEC,UAAU,EAAC,YAAjF;EAA+FC,GAAG,EAAC;AAAnG,CADmB,EAEnB;EAAEL,EAAE,EAAE,GAAN;EAAWC,KAAK,EAAE,MAAlB;EAAyBC,KAAK,EAAC,QAA/B;EAAyCC,KAAK,EAAE,gBAAhD;EAAiEC,UAAU,EAAC,YAA5E;EAA0FC,GAAG,EAAC;AAA9F,CAFmB,EAGnB;EAAEL,EAAE,EAAE,GAAN;EAAWC,KAAK,EAAE,MAAlB;EAAyBC,KAAK,EAAC,UAA/B;EAA2CC,KAAK,EAAE,gBAAlD;EAAmEC,UAAU,EAAC,YAA9E;EAA4FC,GAAG,EAAC;AAAhG,CAHmB,EAInB;EAAEL,EAAE,EAAE,GAAN;EAAWC,KAAK,EAAE,UAAlB;EAA6BC,KAAK,EAAC,cAAnC;EAAmDC,KAAK,EAAE,oBAA1D;EAA+EC,UAAU,EAAC,YAA1F;EAAwGC,GAAG,EAAC;AAA5G,CAJmB,CAArB;AAOA,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,OADsB;EAE5BR,YAF4B;EAG5BS,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1BC,OAAO,CAACC,GAAR,CAAY,sCAAZ;MACAD,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACAC,OAAO,CAACC,GAAR,CAAY,sCAAZ;MACAH,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACI,OAAlB;IACD,CANO;IAORC,UAAU,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;MAC7B,MAAM;QAAEX,EAAF;QAAMC,KAAN;QAAaC,KAAb;QAAoBC,KAApB;QAA2BC,UAA3B;QAAuCC;MAAvC,IAA+CM,MAAM,CAACI,OAA5D;MACA,MAAME,YAAY,GAAGP,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACnB,EAAL,KAAYA,EAAjC,CAArB;;MACA,IAAIiB,YAAJ,EAAkB;QAChBA,YAAY,CAAChB,KAAb,GAAqBA,KAArB;QACAgB,YAAY,CAACf,KAAb,GAAqBA,KAArB;QACAe,YAAY,CAACd,KAAb,GAAqBA,KAArB;QACAc,YAAY,CAACb,UAAb,GAA0BA,UAA1B;QACAa,YAAY,CAACZ,GAAb,GAAmBA,GAAnB;MACD;IACF,CAjBO;IAkBRe,UAAU,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;MAC7B,MAAM;QAAEX;MAAF,IAASW,MAAM,CAACI,OAAtB;MACA,MAAME,YAAY,GAAGP,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACnB,EAAL,KAAYA,EAAjC,CAArB;;MACA,IAAIiB,YAAJ,EAAkB;QAChB,OAAOP,KAAK,CAACW,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACnB,EAAL,KAAYA,EAAnC,CAAP;MACD;IACF;EAxBO;AAHkB,CAAD,CAA7B;AA+BA,OAAO,MAAM;EAAES,OAAF;EAAWO,UAAX;EAAuBI;AAAvB,IAAsCd,SAAS,CAACgB,OAAtD;AACP,eAAehB,SAAS,CAACiB,OAAzB"},"metadata":{},"sourceType":"module"}